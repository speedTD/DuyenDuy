@mixin mediaQueryMax($args...){
    @if length($args) == 1{
        @media (max-width:nth($args,1)){
            @content;
        }
    } 
    @else{
        @media (max-width:nth($args,1)) and (min-width:nth($args,2)){
            @content;
        }
    }
}
@mixin mediaQueryMin($args...){
    @if length($args) == 1{
        @media (min-width:nth($args,1)){
            @content;
        }
    } 
    @else{
        @media (min-width:nth($args,1)) and (min-width:nth($args,2)){
            @content;
        }
    }
}
@mixin transition() {
    -moz-transition: all 0.3s ease-in-out;
    -o-transition: all 0.3s ease-in-out;
    -webkit-transition: all 0.3s ease-in-out;
    transition: all 0.3s ease-in-out;
}

@mixin transition-time($time) {
    -moz-transition: all $time ease-in-out;
    -o-transition: all $time ease-in-out;
    -webkit-transition: all $time ease-in-out;
    transition: all $time ease-in-out;
}
@mixin keyframes( $animationName ){
    @-webkit-keyframes #{$animationName} {
        @content;
    }
    @-moz-keyframes #{$animationName} {
        @content;
    }
    @-o-keyframes #{$animationName} {
        @content;
    }
    @keyframes #{$animationName} {
        @content;
    }
}
@mixin fixedFull {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
}

@mixin blockFixed ($top, $bottom, $left, $right, $zIndex) {
    display: block;
    position: fixed;
    top: $top;
    bottom: $bottom;
    left: $left;
    right: $right;
    z-index: $zIndex;
}

@mixin absoluteFull {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
}

@mixin absoluteItemCenter {
    position: absolute;
    top: 50%;
    left: 50%;
    @include transform(translate(-50%, -50%));
}

@mixin backgroundCoverCenter {
    background-size: cover;
    background-position: center center;
}

@mixin flex {
    display: -webkit-flex;
    display: -moz-flex;
    display: flex;
}

@mixin alignStart {
    -webkit-align-items: flex-start;
    -moz-align-items: flex-start;
    align-items: flex-start;
}
@mixin alignCenter {
    -webkit-align-items: center;
    -moz-align-items: center;
    align-items: center;
}
@mixin alignEnd {
    -webkit-align-items: flex-end;
    -moz-align-items: flex-end;
    align-items: flex-end;
}

@mixin flexAlignStart {
    @include flex;
    @include alignStart;
}
@mixin flexAlignCenter {
    @include flex;
    @include alignCenter;
}
@mixin flexAlignEnd {
    @include flex;
    @include alignEnd;
}

@mixin justifyStar {
    -webkit-justify-content: flex-start;
    -moz-justify-content: flex-start;
    justify-content: flex-start;
}
@mixin justifyCenter {
    -webkit-justify-content: center;
    -moz-justify-content: center;
    justify-content: center;
}
@mixin justifyEnd {
    -webkit-justify-content: flex-end;
    -moz-justify-content: flex-end;
    justify-content: flex-end;
}

@mixin flexContentStart {
    @include flex;
    @include justifyStart;
}
@mixin flexContentEnd {
    @include flex;
    @include justifyEnd;
}
@mixin flexContentCenter {
    @include flex;
    @include justifyCenter;
}

@mixin boxFlexItemCenter {
    @include flex;
    @include alignCenter;
    @include justifyCenter;
}

@mixin transition($value) {
    -webkit-transition: $value;
    -moz-transition: $value;
    transition: $value;
}

@mixin animation($value) {
    -webkit-animation: $value;
    -moz-animation: $value;
    -o-animation: $value;
    -ms-animation: $value;
}
@mixin translateX($value) {
    transform: translateX($value);
    -ms-transform: translateX($value);
    -webkit-transform: translateX($value);
}

@mixin translateY($value) {
    transform: translateY($value);
    -ms-transform: translateY($value);
    -webkit-transform: translateY($value);
}

@mixin scale($value) {
    transform: scale($value);
    -ms-transform: scale($value);
    -webkit-transform: scale($value);
}

@mixin scaleX($value) {
    transform: scaleX($value);
    -ms-transform: scaleX($value);
    -webkit-transform: scaleX($value);
}

@mixin scaleY($value) {
    transform: scaleY($value);
    -ms-transform: scaleY($value);
    -webkit-transform: scaleY($value);
}

@mixin rotate($value) {
    transform: rotate($value);
    -ms-transform: rotate($value);
    -webkit-transform: rotate($value);
}

@mixin rotateX($value) {
    transform: rotateX($value);
    -ms-transform: rotateX($value);
    -webkit-transform: rotateX($value);
}

@mixin rotateY($value) {
    transform: rotateY($value);
    -ms-transform: rotateY($value);
    -webkit-transform: rotateY($value);
}
// transform
@mixin transform($value) {
    -webkit-transform: $value;
    -moz-transform: $value;
    transform: $value;
}
@mixin mediaMaxWidth($w_width) {
    @media only screen and (max-width: $w_width) {
        @content;
    }
}
@mixin mediaMinWidth($w_width) {
    @media only screen and (min-width: $w_width) {
        @content;
    }
}
@mixin bshadow ($value) {
    -webkit-box-shadow: $value;
    -moz-box-shadow: $value;
    box-shadow: $value;
}

@mixin corner($value) {
    -webkit-border-radius:$value;
    -moz-border-radius:$value;
    border-radius:$value;
}
@mixin rgba($color, $alpha) {
  $rgba: rgba($color, $alpha);
  $ie-hex-str: ie-hex-str($rgba);
  background-color: $rgba;
  zoom: 1;
  filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$ie-hex-str},endColorstr=#{$ie-hex-str});
}
@mixin opacity ($value) {
    -webkit-opacity: $value;
    -moz-opacity: $value;
    opacity: $value;
}
@mixin dis($value) {
    display: $value;
}

@mixin fo-f($value) {
    font-family: $value;
}

@mixin fo-s($value) {
    font-size: $value;
}

@mixin bg($value) {
    background: $value;
}

@mixin bor($value) {
    border: $value;
}

@mixin z($value) {
    z-index: $value;
}

@mixin tex-a($value) {
    text-align: $value;
}

@mixin tex-s($value) {
    text-shadow: $value;
}

@mixin cur($value) {
    cursor: $value;
}

@mixin over($value) {
    overflow: $value;
}

@mixin pad ($value) {
    padding: $value;
}

@mixin pad-l ($value) {
    padding-left: $value;
}

@mixin pad-r ($value) {
    padding-right: $value;
}

@mixin pad-t ($value) {
    padding-top: $value;
}

@mixin pad-b ($value) {
    padding-bottom: $value;
}

@mixin mar ($value) {
    margin: $value;
}

@mixin mar-l ($value) {
    margin-left: $value;
}

@mixin mar-r ($value) {
    margin-right: $value;
}

@mixin mar-t ($value) {
    margin-top: $value;
}

@mixin mar-b ($value) {
    margin-bottom: $value;
}

@mixin tex-d ($value) {
    text-decoration: $value;
}

@mixin tex-i($value) {
    text-indent: $value;
}

@mixin tex-trans($value) {
    text-transform: $value;
}

@mixin pad-lr($l,$r) {
    padding-left: $l;
    padding-right: $r;
}

@mixin pad-tb($t,
$b) {
    padding-top: $t;
    padding-bottom: $b;
}

@mixin mar-lr($l,$r) {
    margin-left: $l;
    margin-right: $r;
}



@mixin mar-tb($t,$b) {
    margin-top: $t;
    margin-bottom: $b;
}

@mixin fl($value) {
    float: $value;
}

@mixin bgc($value) {
    background-color: $value;
}

@mixin bgp($value) {
    background-position: $value;
}

@mixin c($value) {
    color: $value;
}

@mixin lh($value) {
    line-height: $value;
}

@mixin dis($value) {
    display: $value;
}

@mixin pos($value) {
    position: $value;
}

@mixin t($value) {
    top: $value;
}

@mixin l($value) {
    left: $value;
}

@mixin r($value) {
    right: $value;
}

@mixin b($value) {
    bottom: $value;
}

@mixin tl($t,$l) {
    top: $t;
    left: $l;
}

@mixin bl($b,$l) {
    bottom: $b;
    left: $l;
}

@mixin tr($t,$r) {
    top: $t;
    right: $r;
}

@mixin br($b,$r) {
    bottom: $b;
    right: $r;
}

@mixin fo-w($value) {
    font-weight: $value;
}

@mixin bor($value) {
    border: $value;
}

@mixin bor-c($value) {
    border-color: $value;
}

@mixin bor-w($value) {
    border-width: $value;
}

@mixin bor-l($value) {
    border-left: $value;
}

@mixin bor-r($value) {
    border-right: $value;
}

@mixin bor-t($value) {
    border-top: $value;
}

@mixin bor-b($value) {
    border-bottom: $value;
}

@mixin w($value) {
    width: $value;
}

@mixin h($value) {
    height: $value;
}

@mixin max-w($value) {
    max-width: $value;
}

@mixin min-w($value) {
    min-width: $value;
}

@mixin max-h($value) {
    max-height: $value;
}

@mixin min-h($value) {
    min-height: $value;
}

@mixin wh($a,$b) {
    width: $a;
    height: $b;
}

@mixin ver($a) {
    vertical-align: $a;
}

@mixin vis($a) {
    visibility: $a;
}

@mixin content($a) {
    content: $a;
}




// Horizontal gradient, from left to right
//
// Creates two color stops, start and end, by specifying a color and position for each color stop.
// Color stops are not available in IE9 and below.
@mixin gradient-horizontal($start-color,$end-color,$start-percent,$end-percent) {
    background-image: -webkit-gradient(linear, $start-percent top, $end-percent top, from($start-color), to($end-color)); // Safari 4+, Chrome 2+
    background-image: -webkit-linear-gradient(left, color-stop($start-color $start-percent), color-stop($end-color $end-percent)); // Safari 5.1+, Chrome 10+
    background-image: -moz-linear-gradient(left, $start-color $start-percent, $end-color $end-percent); // FF 3.6+
    background-image: linear-gradient(to right, $start-color $start-percent, $end-color $end-percent); // Standard, IE10
    background-repeat: repeat-x;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$start-color}, endColorstr=#{$end-color}, GradientType=1); // IE9 and down
}

// Vertical gradient, from top to bottom
//
// Creates two color stops, start and end, by specifying a color and position for each color stop.
// Color stops are not available in IE9 and below.
@mixin gradient-vertical($start-color,$end-color,$start-percent,$end-percent) {
    background-image: -webkit-gradient(linear, left $start-percent, left $end-percent, from($start-color), to($end-color)); // Safari 4+, Chrome 2+
    background-image: -webkit-linear-gradient(top, $start-color $start-percent, $end-color $end-percent); // Safari 5.1+, Chrome 10+
    background-image: -moz-linear-gradient(top, $start-color $start-percent, $end-color $end-percent); // FF 3.6+
    background-image: linear-gradient(to bottom, $start-color $start-percent, $end-color $end-percent); // Standard, IE10
    background-repeat: repeat-x;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$start-color}, endColorstr=#{$end-color}, GradientType=0); // IE9 and down
}

@mixin gradient-directional($start-color,$end-color,$deg) {
    background-repeat: repeat-x;
    background-image: -webkit-linear-gradient($deg, $start-color, $end-color); // Safari 5.1+, Chrome 10+
    background-image: -moz-linear-gradient($deg, $start-color, $end-color); // FF 3.6+
    background-image: linear-gradient($deg, $start-color, $end-color); // Standard, IE10
}

@mixin gradient-horizontal-three-colors($start-color,$mid-color,$color-stop,$end-color) {
    background-image: -webkit-gradient(left, linear, 0 0, 0 100%, from($start-color), color-stop($color-stop, $mid-color), to($end-color));
    background-image: -webkit-linear-gradient(left, $start-color, $mid-color $color-stop, $end-color);
    background-image: -moz-linear-gradient(left, $start-color, $mid-color $color-stop, $end-color);
    background-image: linear-gradient(to right, $start-color, $mid-color $color-stop, $end-color);
    background-repeat: no-repeat;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$start-color}, endColorstr=#{$end-color}, GradientType=1); // IE9 and down, gets no color-stop at all for proper fallback
}

@mixin gradient-vertical-three-colors($start-color,$mid-color,$color-stop,$end-color) {
    background-image: -webkit-gradient(linear, 0 0, 0 100%, from($start-color), color-stop($color-stop, $mid-color), to($end-color));
    background-image: -webkit-linear-gradient($start-color, $mid-color $color-stop, $end-color);
    background-image: -moz-linear-gradient(top, $start-color, $mid-color $color-stop, $end-color);
    background-image: linear-gradient($start-color, $mid-color $color-stop, $end-color);
    background-repeat: no-repeat;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$start-color}, endColorstr=#{$end-color}, GradientType=0); // IE9 and down, gets no color-stop at all for proper fallback
}

@mixin gradient-radial($inner-color,$outer-color) {
    background-image: -webkit-gradient(radial, center center, 0, center center, 460, from($inner-color), to($outer-color));
    background-image: -webkit-radial-gradient(circle, $inner-color, $outer-color);
    background-image: -moz-radial-gradient(circle, $inner-color, $outer-color);
    background-image: radial-gradient(circle, $inner-color, $outer-color);
    background-repeat: no-repeat;
}

@mixin gradient-striped($color,$angle) {
    background-image: -webkit-gradient(linear, 0 100%, 100% 0, color-stop(.25, $color), color-stop(.25, transparent), color-stop(.5, transparent), color-stop(.5, $color), color-stop(.75, $color), color-stop(.75, transparent), to(transparent));
    background-image: -webkit-linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);
    background-image: -moz-linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);
    background-image: linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);
}


// Sizing shortcuts
@mixin size($width,$height) {
    width: $width;
    height: $height;
}

// Center-align a block level element
@mixin center-block{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

// Resize anything
@mixin resizable($direction) {
    resize: $direction; // Options: horizontal, vertical, both
    overflow: auto; // Safari fix
}
/*
example keyframes
@include keyframes( incrediblehulk ){
    0% {
        color: #f8d2c0;
    }
    100% {
        color: #0f0;
    }
}*/

@mixin animated($effect,$time){
    -webkit-animation-duration: $time;
    animation-duration: $time;
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    -webkit-backface-visibility: visible !important;
    backface-visibility: visible !important;
    -webkit-animation-name: $effect;
    animation-name: $effect;
}